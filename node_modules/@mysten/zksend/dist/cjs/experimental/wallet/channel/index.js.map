{
  "version": 3,
  "sources": ["../../../../../src/experimental/wallet/channel/index.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { InferOutput } from 'valibot';\nimport { parse, safeParse } from 'valibot';\n\nimport { withResolvers } from '../../utils/withResolvers.js';\nimport type { StashedRequestData, StashedResponsePayload, StashedResponseTypes } from './events.js';\nimport { StashedRequest, StashedResponse } from './events.js';\n\nexport const DEFAULT_STASHED_ORIGIN = 'https://getstashed.com';\n\nexport { StashedRequest, StashedResponse };\n\nconst getClientMetadata = () => {\n\treturn {\n\t\tversion: 'v1',\n\t\toriginUrl: window.location.href,\n\t\tuserAgent: navigator.userAgent,\n\t\tscreenResolution: `${window.screen.width}x${window.screen.height}`,\n\t\tlanguage: navigator.language,\n\t\tplatform: navigator.platform,\n\t\ttimezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n\t\ttimestamp: Date.now(),\n\t};\n};\n\nexport class StashedPopup {\n\t#popup: Window;\n\n\t#version: string;\n\t#id: string;\n\t#origin: string;\n\t#name: string;\n\t#chain: string | undefined;\n\n\t#promise: Promise<unknown>;\n\t#resolve: (data: unknown) => void;\n\t#reject: (error: Error) => void;\n\n\t#interval: ReturnType<typeof setInterval> | null = null;\n\n\tconstructor({\n\t\tname,\n\t\torigin = DEFAULT_STASHED_ORIGIN,\n\t\tchain,\n\t}: {\n\t\tname: string;\n\t\torigin?: string;\n\t\tchain?: string;\n\t}) {\n\t\tconst popup = window.open('about:blank', '_blank');\n\n\t\tif (!popup) {\n\t\t\tthrow new Error('Failed to open new window');\n\t\t}\n\t\tthis.#popup = popup;\n\n\t\tthis.#id = crypto.randomUUID();\n\t\tthis.#origin = origin;\n\t\tthis.#name = name;\n\t\tthis.#version = 'v1';\n\t\tthis.#chain = chain;\n\t\tconst { promise, resolve, reject } = withResolvers();\n\t\tthis.#promise = promise;\n\t\tthis.#resolve = resolve;\n\t\tthis.#reject = reject;\n\n\t\tthis.#interval = setInterval(() => {\n\t\t\ttry {\n\t\t\t\tif (this.#popup.closed) {\n\t\t\t\t\tthis.#cleanup();\n\t\t\t\t\treject(new Error('User closed the Stashed window'));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// This can error during the login flow, but that's fine.\n\t\t\t}\n\t\t}, 1000);\n\t}\n\n\tsend<T extends StashedRequestData['type']>({\n\t\ttype,\n\t\t...data\n\t}: {\n\t\ttype: T;\n\t} & Extract<StashedRequestData, { type: T }>): Promise<StashedResponseTypes[T]> {\n\t\twindow.addEventListener('message', this.#listener);\n\n\t\tconst requestData = {\n\t\t\tversion: this.#version,\n\t\t\trequestId: this.#id,\n\t\t\tappUrl: window.location.href.split('#')[0],\n\t\t\tappName: this.#name,\n\t\t\tpayload: {\n\t\t\t\ttype,\n\t\t\t\tchain: this.#chain,\n\t\t\t\t...data,\n\t\t\t},\n\t\t\tmetadata: getClientMetadata(),\n\t\t};\n\t\tconst encodedRequestData = btoa(JSON.stringify(requestData));\n\n\t\tthis.#popup.location.assign(\n\t\t\t`${this.#origin}/dapp-request${data ? `#${encodedRequestData}` : ''}`,\n\t\t);\n\n\t\treturn this.#promise as Promise<StashedResponseTypes[T]>;\n\t}\n\n\tclose() {\n\t\tthis.#cleanup();\n\t\tthis.#popup.close();\n\t}\n\n\t#listener = (event: MessageEvent) => {\n\t\tif (event.origin !== this.#origin) {\n\t\t\treturn;\n\t\t}\n\t\tconst { success, output } = safeParse(StashedResponse, event.data);\n\t\tif (!success || output.id !== this.#id) return;\n\n\t\tthis.#cleanup();\n\n\t\tif (output.payload.type === 'reject') {\n\t\t\tthis.#reject(new Error('User rejected the request'));\n\t\t} else if (output.payload.type === 'resolve') {\n\t\t\tthis.#resolve(output.payload.data);\n\t\t}\n\t};\n\n\t#cleanup() {\n\t\tif (this.#interval) {\n\t\t\tclearInterval(this.#interval);\n\t\t\tthis.#interval = null;\n\t\t}\n\t\twindow.removeEventListener('message', this.#listener);\n\t}\n}\n\nexport class StashedHost {\n\t#request: InferOutput<typeof StashedRequest>;\n\n\tconstructor(request: InferOutput<typeof StashedRequest>) {\n\t\tif (typeof window === 'undefined' || !window.opener) {\n\t\t\tthrow new Error(\n\t\t\t\t'StashedHost can only be used in a window opened through `window.open`. `window.opener` is not available.',\n\t\t\t);\n\t\t}\n\n\t\tthis.#request = request;\n\t}\n\n\tstatic fromPayload(payload: StashedRequest) {\n\t\tconst { requestId, appUrl, appName, version, ...rest } = payload;\n\n\t\tconst request = parse(StashedRequest, {\n\t\t\tversion,\n\t\t\trequestId,\n\t\t\tappUrl,\n\t\t\tappName,\n\t\t\t...rest,\n\t\t});\n\n\t\treturn new StashedHost(request);\n\t}\n\n\tgetRequestData() {\n\t\treturn this.#request;\n\t}\n\n\tsendMessage(payload: StashedResponsePayload) {\n\t\twindow.opener.postMessage(\n\t\t\t{\n\t\t\t\tid: this.#request.requestId,\n\t\t\t\tsource: 'stashed-channel',\n\t\t\t\tpayload,\n\t\t\t\tversion: this.#request.version,\n\t\t\t} satisfies StashedResponse,\n\t\t\tthis.#request.appUrl,\n\t\t);\n\t}\n\n\tclose(payload?: StashedResponsePayload) {\n\t\tif (payload) {\n\t\t\tthis.sendMessage(payload);\n\t\t}\n\t\twindow.close();\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
